import Mock  from "mockjs"
//模拟网络请求延时
Mock.setup({
  timeout:500
})
//登录接口
//Mock.mock("地址","请求方式","回调函数")
Mock.mock("http://localhost:8080/login","post",(req)=>{
  //请求对象
  const {username,password}=JSON.parse(req.body)
  //根据用户名和密码查询数据，查询出数据返回给前端
  if(username=="admin"&&password==123456)
  {
    return{
      code:200,
      success:true,
      message:"登陆成功",
      //token 令牌（门禁卡）
      token:"3arc9h0vhcr0f8iprpnscmfo8s",
      nickname:"王何玮"
    }
  }
  else{
    return{
      code:100,
      success:false,
      message:"账号或密码有误"
    }
  }
})

//入职日期接口
Mock.mock("http://localhost:8080/in","get",()=>{
  return{
    code:200,
      success:true,
      message:"请求成功",
      time:"2020-07-01 00:00:00",

  }
})


//菜单接口
const menuList=[
  {
    name:"首页",
    icon:"el-icon-s-home",
    url:"/index"
  },
  {
    name:"订单管理",
    icon:"el-icon-s-order",
    url:"/order",
    children:[
      {
        name:"订单列表",
        icon:"el-icon-user",
        url:"/orders/list",
      }
    ]
  },
  {
    name:"运单管理",
    icon:"el-icon-menu",
    url:"/waybill",
    children:[
      {
        name:"运单录入",
        icon:"el-icon-notebook-2",
        url:"/waybill/in",
      },
      {
        name:"运单列表",
        icon:"el-icon-truck",
        url:"/waybill/list",
      }
    ]
  },
  {
    name:"发车管理",
    icon:"el-icon-s-order",
    url:"/depart",
    children:[
      {
        name:"发车数据单",
        icon:"el-icon-tickets",
        url:"/depart/data",
      }
    ]
  },
  {
    name:"承运商管理",
    icon:"el-icon-user",
    url:"/carrier",
    children:[
      {
        name:"承运商列表",
        icon:"el-icon-chat-square",
        url:"/carrier/trucks"
      },
      {
        name:"车辆列表",
        icon:"el-icon-bank-card",
        url:"/carrier/trucks"
      },{
        name:"承运司机列表",
        icon:"el-icon-bank-card",
        url:"/carrier/list"
      },
    ]
  },{
    name:"客户管理",
    icon:"el-icon-chat-dot-square",
    url:"/customer"
  },{
    name:"财务管理",
    icon:"el-icon-user",
    url:"/my",
    childrenL:[
      {
        name:"客户对账单",
        icon:"el-icon-chat-square",
        url:"/customer/info"
      },{
        name:"承运商对账单",
        icon:"el-icon-bank-card",
        url:"/record"
      },{
        name:"承运司机列表",
        icon:"el-icon-bank-card",
        url:"/record"
      }
    ]
  },{
    name:"个人中心",
    icon:"el-icon-chat-dot-square",
    url:"/personal"
  }
]


Mock.mock("http://localhost:8080/menu","get",()=>{
  return{
    code:200,
      success:true,
      message:"请求成功",
      data:menuList
  }
})

//折现图图表接口
Mock.mock("http://localhost:8080/line","get",()=>{
  return{
    code:200,
      success:true,
      message:"请求成功",
      data:{
        "22-01":30,
        "22-02":84,
        "22-03":56,
        "22-04":47,
        "22-05":84,
        "22-06":61,
        "22-07":90,
      }

  }
})


//饼图图表接口
Mock.mock("http://localhost:8080/pie","get",()=>{
  return{
    code:200,
      success:true,
      message:"请求成功",
      data:{
        1048:"电子产品",
        735:"化妆品",
        580:"体育用品",
        484:"鞋服外贸",
        300:"生活用品",

      }

  }
})


//修改记录接口
Mock.mock("http://localhost:8080/alter","get",()=>{
  return{
    code:200,
      success:true,
      message:"请求成功",
      data:{
        1048:"电子产品",
        735:"化妆品",
        580:"体育用品",
        484:"鞋服外贸",
        300:"生活用品",

      }

  }
})

//订单管理-订单列表
Mock.mock("http://localhost:8080/orderList",'post',(req)=>{
  const{ page,pageSize,keyword}=JSON.parse(req.body);
  console.log("接口接到的参数",page,pageSize,keyword);
  return{
    code:200,
    success:true,
    message:"成功",
    data:Mock.mock({
      [`list|${pageSize}`]:[{
        'id|+1':10000,
        'status|1':[1,2,3,4],
        'date':Mock.Random.date(),
        'name|1':["诺来科技有限公司","晖华科技有限公司","川聚物流有限公司","成越材料有限公司","巨博纺织有限公司"],
        'start':Mock.Random.city(true),
        'end':Mock.Random.city(true),
        'cargo':["日用品","纺织品","生鲜","建材","电器"],
        'count':Mock.Random.integer(10,200),
        'unit|1':["方","吨"],
        'price':Mock.Random.integer(5000,50000),
        'from|1':["移动端","pc端"],
        'pay|1':[1,2],
      }],
      "title":47
    })
  }
})

//订单管理-新建订单
Mock.mock("http://localhost:8080/addOrder","post",(req)=>{
  const {name,start,end,cargo,unit,price,from,pay}=JSON.parse(req.body);
  console.log("新建接口订单",name,start,end,cargo,unit,price,from,pay);
  return{
    code:200,
    success:true,
    message:"新建成功",
  }
})
//运单管理-运单列表
Mock.mock('http://localhost:8080/waybillList',"post",(req)=>{
  const {page,pageSize,waybillNo,name,startDate,endDate,status}=JSON.parse(req.body);
  console.log("服务器接收到的数据:",page,pageSize,waybillNo,name,startDate,endDate,status);
  return{
    code:200,
    success:true,
    message:"成功",
    data:Mock.mock({
      [`list|${pageSize}`]:[{
        'no|+1':10000,
        'date':Mock.Random.date(),
        'name|1':["诺来科技有限公司","晖华科技有限公司","川聚物流有限公司","成越材料有限公司","巨博纺织有限公司"],
        'start':Mock.Random.city(true),
        'end':Mock.Random.city(true),
        'cargo':["日用品","纺织品","生鲜","建材","电器"],
        'count':Mock.Random.integer(10,200),
        'price':Mock.Random.integer(5000,50000),
        'needRecive|1':[1,2],
        'plateNumber|1':["苏FD937S","京A12345","苏F88888"],
        'driver':Mock.Random.cname(),
        'tel|1':[13862727702,18795737242,13773765556],
        'percent|1':[37,22,89,65,80,74,56]
      }],
      "title":47
    })
  }
})